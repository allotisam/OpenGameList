{"version":3,"sources":["item-detail-edit.component.ts"],"names":["ItemDetailEditComponent","authService","itemService","router","activatedRoute","this","prototype","ngOnInit","_this","isLoggedIn","navigate","id","snapshot","params","get","subscribe","item","console","log","item_1","Item","onInsert","add","data","Id","error","onUpdate","update","onDelete","delete","onBack","onItemDetailView","__decorate","core_1","Component","selector","template","auth_service_1","AuthService","item_service_1","ItemService","router_1","Router","ActivatedRoute"],"mappings":"wlCAkEaA,wBAAuB,WAGhC,QAAAA,yBAAoBC,YAAkCC,YAAkCC,OAAwBC,gBAA5FC,KAAAJ,YAAAA,YAAkCI,KAAAH,YAAAA,YAAkCG,KAAAF,OAAAA,OAAwBE,KAAAD,eAAAA,eA+DpH,MA5DIJ,yBAAAM,UAAAC,SAAA,WAAA,GAAAC,OAAAH,IACSA,MAAKJ,YAAYQ,cAClBJ,KAAKF,OAAOO,UAAU,IAG1B,IAAIC,KAAMN,KAAKD,eAAeQ,SAASC,OAAW,EAC9CF,KACAN,KAAKH,YAAYY,IAAIH,IAAII,UAAU,SAAAC,MAAQ,MAAAR,OAAKQ,KAAOA,OACvDC,QAAQC,IAAI,kCAAoCP,GAAK,gBAAkBN,KAAKW,OAEhE,IAAPL,IACLM,QAAQC,IAAI,iCACZb,KAAKW,KAAO,GAAIG,QAAAC,KAAK,EAAG,WAAY,QAGpCH,QAAQC,IAAI,uCACZb,KAAKF,OAAOO,UAAU,OAI9BV,wBAAAM,UAAAe,SAAA,SAASL,MAAT,GAAAR,OAAAH,IACIA,MAAKH,YAAYoB,IAAIN,MAAMD,UACvB,SAACQ,MACGf,MAAKQ,KAAOO,KACZN,QAAQC,IAAI,QAAUV,MAAKQ,KAAKQ,GAAK,oBACrChB,MAAKL,OAAOO,UAAU,MAE1B,SAACe,OAAU,MAAAR,SAAQC,IAAIO,UAI/BzB,wBAAAM,UAAAoB,SAAA,SAASV,MAAT,GAAAR,OAAAH,IACIA,MAAKH,YAAYyB,OAAOX,MAAMD,UAC1B,SAACQ,MACGf,MAAKQ,KAAOO,KACZN,QAAQC,IAAI,QAAUV,MAAKQ,KAAKQ,GAAK,sBACrChB,MAAKL,OAAOO,UAAU,YAAaF,MAAKQ,KAAKQ,MAEjD,SAACC,OAAU,MAAAR,SAAQC,IAAIO,UAI/BzB,wBAAAM,UAAAsB,SAAA,SAASZ,MAAT,GAAAR,OAAAH,KACQM,GAAKK,KAAKQ,EACdnB,MAAKH,YAAY2B,OAAOlB,IAAII,UACxB,SAACQ,MACGN,QAAQC,IAAI,QAAUP,GAAK,sBAC3BH,MAAKL,OAAOO,UAAU,MAE1B,SAACe,OAAU,MAAAR,SAAQC,IAAIO,UAI/BzB,wBAAAM,UAAAwB,OAAA,WACIzB,KAAKF,OAAOO,UAAU,MAG1BV,wBAAAM,UAAAyB,iBAAA,SAAiBf,MACbX,KAAKF,OAAOO,UAAU,YAAaM,KAAKQ,MAEhDxB,2BAlEaA,wBAAuBgC,YA5DnCC,OAAAC,WACGC,SAAU,mBACVC,SAAU,qpHA6DuBC,eAAAC,YAAkCC,eAAAC,YAA6BC,SAAAC,OAAgCD,SAAAE,kBAHvH3C","file":"item-detail-edit.component.js","sourcesContent":["import {Component, Input} from \"@angular/core\";\r\nimport {Router, ActivatedRoute} from \"@angular/router\";\r\nimport {Item} from \"./item\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport {ItemService} from \"./item.service\";\r\n\r\n@Component({\r\n    selector: \"item-detail-edit\",\r\n    template: `\r\n        <div *ngIf=\"item\">\r\n            <h2>\r\n                <a href=\"#\" (click)=\"onBack()\">&laquo; Back to Home</a>\r\n            </h2>\r\n            <div class=\"item-container\">\r\n                <ul class=\"nav nav-tabs\">\r\n                    <li role=\"presentation\" class=\"active\">\r\n                        <a href=\"#\" onclick=\"return false;\">Edit</a>\r\n                    </li>\r\n                    <li role=\"presentation\" *ngIf=\"item.Id != 0\">\r\n                        <a href=\"#\" onclick=\"return false;\" (click)=\"onItemDetailView(item)\">View</a>\r\n                    </li>\r\n                </ul>\r\n                <div class=\"panel panel-default\">\r\n                    <div class=\"panel-body\">\r\n                        <form class=\"item-detail-edit\">\r\n                            <h3>\r\n                                {{item.Title}}\r\n                                <span class=\"empty-field\" [hidden]=\"dTitle.valid\">\r\n                                    Empty Title\r\n                                </span>\r\n                            </h3>\r\n                            <div class=\"form-group\">\r\n                                <div class=\"form-group has-feedback\" [ngClass]=\"{'has-success': dTitle.valid, 'has-error': !dTitle.valid}\">\r\n                                    <label for=\"input-title\">Title</label>\r\n                                    <input id=\"input-title\" name=\"input-title\" type=\"text\" class=\"form-control\" [(ngModel)]=\"item.Title\" placeholder=\"Insert the title...\" required #dTitle=\"ngModel\" />\r\n                                    <span class=\"glyphicon form-control-feedback\" aria-hidden=\"true\" [ngClass]=\"{'glyphicon-ok': dTitle.valid, 'glyphicon-remove': !dTitle.valid}\"></span>\r\n                                    <div [hidden]=\"dTitle.valid\" class=\"alert alert-danger\">\r\n                                        You need to enter a valid Title.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"input-description\">Description</label>\r\n                                <textarea id=\"input-description\" name=\"input-description\" class=\"form-control\" [(ngModel)]=\"item.Description\" placeholder=\"Insert a suitable description...\" required></textarea>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"input-text\">Text</label>\r\n                                <textarea id=\"input-text\" name=\"input-text\" class=\"form-control\" [(ngModel)]=\"item.Text\" placeholder=\"Insert a suitable description...\"></textarea>\r\n                            </div>\r\n                            <div *ngIf=\"item.Id == 0\" class=\"commands insert\">\r\n                                <input type=\"button\" class=\"btn btn-primary\" value=\"Save\" (click)=\"onInsert(item)\" />\r\n                                <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onBack()\" />\r\n                            </div>\r\n                            <div *ngIf=\"item.Id != 0\" class=\"commands update\">\r\n                                <input type=\"button\" class=\"btn btn-primary\" value=\"Update\" (click)=\"onUpdate(item)\" />\r\n                                <input type=\"button\" class=\"btn btn-danger\" value=\"Delete\" (click)=\"onDelete(item)\" />\r\n                                <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onItemDetailView(item)\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        `\r\n})\r\n\r\nexport class ItemDetailEditComponent {\r\n    item: Item;\r\n\r\n    constructor(private authService: AuthService, private itemService: ItemService, private router: Router, private activatedRoute: ActivatedRoute) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n\r\n        var id = +this.activatedRoute.snapshot.params[\"id\"];\r\n        if (id) {\r\n            this.itemService.get(id).subscribe(item => this.item = item);\r\n            console.log(\"loading the details for item:  \" + id + \", \\ncontent: \" + this.item);\r\n        }\r\n        else if (id === 0) {\r\n            console.log(\"id is 0: adding a new item...\");\r\n            this.item = new Item(0, \"New Item\", null);\r\n        }\r\n        else {\r\n            console.log(\"Invalid id: routing back to home...\");\r\n            this.router.navigate([\"\"]);\r\n        }\r\n    }\r\n\r\n    onInsert(item: Item) {\r\n        this.itemService.add(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(\"Item \" + this.item.Id + \" has been added.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onUpdate(item: Item) {\r\n        this.itemService.update(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(\"Item \" + this.item.Id + \" has been updated.\");\r\n                this.router.navigate([\"item/view\", this.item.Id]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onDelete(item: Item) {\r\n        var id = item.Id;\r\n        this.itemService.delete(id).subscribe(\r\n            (data) => {\r\n                console.log(\"Item \" + id + \" hsa been deleted.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate([\"\"]);\r\n    }\r\n\r\n    onItemDetailView(item: Item) {\r\n        this.router.navigate([\"item/view\", item.Id]);\r\n    }\r\n}\r\n"]}